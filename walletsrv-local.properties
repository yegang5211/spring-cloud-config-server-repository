# ===============================================
#     波罗米服务配置
# ===============================================
borrome.deploy.ip=127.0.0.1
borrome.deploy.port=8088

# ============================
#     钱包服务配置
# ============================
# 钱包部署的机器的地址
wallet.deploy.ip=127.0.0.1
# 服务发现配置
server.port=${port:9000}
# 定义默认资产追加到新创建的钱包 （使用开发环境）0x6ee41921e9d96081429d78694e995be2ec3bb0c6
wallet.asset.tokenaddress.default=0x6ee41921e9d96081429d78694e995be2ec3bb0c6

# ============================
#     REDIS服务配置
# ============================
# redis的Key的生成前缀
business.key.preffix=local

# ===============================================
#     钱包中间件配置 (用于查询余额，查询TOKEN)
# ===============================================
#   mok生产环境中间件地址
#    13.124.152.24(外网)
#    172.31.3.148(内网)
#    118.89.248.42(测试环境)
#   服务器在韩国首尔，这次所有亚马逊服务器都在韩国首尔，可以尝试一下内网连接。
transfer.service.ip=118.89.248.42

# ===============================================
#     交易回调
# ===============================================
# 钱包中间件调用的 回调 端口号要确保能访问到，生产环境，要配置成 80  开发环境是${server.port}
# 生产环境要考虑 ${wallet.deploy.ip} 为域名
transfer.service.callback.ip=${wallet.deploy.ip}
transfer.service.callback.port=${server.port}

# ===============================================
# mqtt 消息推送
# 开发mqtthttp:
# //58.87.111.234:61680/console/index.html
# ===============================================
mqtt.HOST=tcp://58.87.111.234:61613
mqtt.username=admin
mqtt.password=password
mqtt.topic.cnto=mqtt_topic_cnto
mqtt.topic.transfer=mqtt_topic_transfer
mqtt.topic.test=mqtt_topic_test
mqtt.clientid=mybroker

# ============================
#     数据库服务配置
# ============================
#
# mybatis
mybatis.type-aliases-package=com.hankal.detrust.domain
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.default-fetch-size=100
mybatis.configuration.default-statement-timeout=3000
# mybatis end
# druid

spring.datasource.url=jdbc:mysql://58.87.111.234:3306/mok_wallet?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=SHUJUkeji828!
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.filters=stat
spring.datasource.maxActive=0
spring.datasource.initialSize=10
spring.datasource.maxWait=10000
spring.datasource.minIdle=10
spring.datasource.maxIdle=20
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=select 'x'
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxOpenPreparedStatements=20
# druid end


profile=local
neo.hello=hello im [local]
